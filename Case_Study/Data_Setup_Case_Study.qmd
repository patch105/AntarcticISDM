---
title: "Data Setup Case Study"
author: "Charlotte Patterson"
format: 
  html:
    embed-resources: true
---

```{r}

#| output: false

# bibliography: references.bib

library(tidyverse)

packages <- c("sf", "terra", "viridis", "here", "ggpubr")

walk(packages, require, character.only = T)

here::here() 

```

# Load habitat covariates

```{r}

Bunger.8m.DEM <- rast(here("Data/Clarke_REMA_8M.tif"))
names(Bunger.8m.DEM) <- "elev"

Vestfold.8m.DEM <- rast(here("Data/Travers_8m_dem_composite.tif"))
names(Vestfold.8m.DEM) <- "elev"

```

### Create topographic variables
Aspect, Slope, Topographic Wetness Index, northness, eastness

Quick plotting to check them out.

```{r}

plot(terrain(project(Bunger.8m.DEM, aggregate(rast(Bunger.8m.DEM), 10), by_util = TRUE), "roughness"))
plot(terrain(project(Vestfold.8m.DEM, aggregate(rast(Vestfold.8m.DEM), 10), by_util = TRUE), "roughness"))
plot(terrain(project(Bunger.8m.DEM, aggregate(rast(Bunger.8m.DEM), 10), by_util = TRUE), "slope"))
plot(terrain(project(Vestfold.8m.DEM, aggregate(rast(Vestfold.8m.DEM), 10), by_util = TRUE), "slope"))
plot(terrain(project(Bunger.8m.DEM, aggregate(rast(Bunger.8m.DEM), 10), by_util = TRUE), "TRI"))
plot(terrain(project(Vestfold.8m.DEM, aggregate(rast(Vestfold.8m.DEM), 10), by_util = TRUE), "TRI"))
plot(terrain(project(Bunger.8m.DEM, aggregate(rast(Bunger.8m.DEM), 10), by_util = TRUE), "aspect"))
plot(terrain(project(Vestfold.8m.DEM, aggregate(rast(Vestfold.8m.DEM), 10), by_util = TRUE), "aspect"))



```

```{r}

Bunger_TRI <- terrain(Bunger.8m.DEM, 
               "TRI", 
               neighbors = 8)

Bunger_slope <- terrain(Bunger.8m.DEM, 
                 "slope",
                 neighbors = 8,
                 unit = "degrees")
                 
Bunger_aspect <- terrain(Bunger.8m.DEM, 
                 "slope",
                 neighbors = 8,
                 unit = "degrees")

Bunger.covs.stk <- c(Bunger.8m.DEM, Bunger_TRI, Bunger_slope, Bunger_aspect)
names(Bunger.covs.stk) <- c("elev", "TRI", "slope", "aspect")


Vestfold_TRI <- terrain(Vestfold.8m.DEM, 
               "TRI", 
               neighbors = 8)

Vestfold_slope <- terrain(Vestfold.8m.DEM, 
                 "slope",
                 neighbors = 8,
                 unit = "degrees")
                 
Vestfold_aspect <- terrain(Vestfold.8m.DEM, 
                 "slope",
                 neighbors = 8,
                 unit = "degrees")
Vestfold.covs.stk <- c(Vestfold.8m.DEM, Vestfold_TRI, Vestfold_slope, Vestfold_aspect)
names(Vestfold.covs.stk) <- c("elev", "TRI", "slope", "aspect")


```


### Load ice-free land & ACBRs

```{r}

ice_free <- st_read(here("Data/Landsat_8_Derived_Outcrop_Dataset_2016.shp"))
ice_free <- st_transform(ice_free, crs = 3031)
ice_freeSPVE <- vect(ice_free)

# Load the Antarctic Conservation Biogeographic Regions, filter to East Antarctica
ACBRS <- st_read(here("Data/ACBRs_v2_2016.shp"), crs = 3031) %>% filter(ACBR_Name == "East Antarctica")
ACBRS_SPVE <- vect(ACBRS)

```
### Mask habitat by ice-free land

```{r}

Bunger.covs.stk <- mask(Bunger.covs.stk, ice_freeSPVE, updatevalue = NA)
Vestfold.covs.stk <- mask(Vestfold.covs.stk, ice_freeSPVE, updatevalue = NA)

```

### Plot

::: {.panel-tabset}

### Bunger Hills

```{r}

# PLOT - TAKES AGES
Bunger.8m.DEM %>%
  as.data.frame(xy = T) %>%
  ggplot() +
  geom_tile(aes(x = x, y = y, fill = elev)) +
  scale_fill_viridis() +
  theme_bw()

```
### Vestfold Hills

```{r}

Vestfold.8m.DEM %>%
  as.data.frame(xy = T) %>%
  ggplot() +
  geom_tile(aes(x = x, y = y, fill = elev)) +
  scale_fill_viridis() +
  theme_bw()

```

:::

# Load biodiversity data

First we load the presence-only data. 

```{r}

Ant_biodf <- read.csv(here("Data/SCAR_Ant_Terr_Bio_DataBase_MASTER_16-11-2023.csv"), header = T)

Ant_bio <- st_as_sf(Ant_biodf, 
                    coords = c("decimalLongitude", "decimalLatitude"), 
                    crs = 4326) %>% 
  filter(class %in% c("Lecanoromycetes", "Lichinomycetes", "Arthonionmycetes", "Leotiomycetes", "Dothideomycetes",
                      "Bryopsida",
                      "Andreaeopsida"))

# Removed PTM that identified non-lichenised fungi for e.g.,
Ant_bio <- Ant_bio %>% 
 filter(!PTM_ID %in% c("?", "29", "26 & 29", "75"))

Ant_bio <- st_transform(Ant_bio, 3031) #project to WGS_1984 Antarctic Polar Stereographic

Ant_bio_SPVE <- vect(Ant_bio) 

```

### Mask presence-only records by ice-free land
Bunger Hills, Vestfold Hills, East Antarctica

```{r}

bio_east_ant_df <- terra::mask(Ant_bio_SPVE, ACBRS_SPVE) %>% as.data.frame(geom = "XY")
bio_east_ant_sf <- terra::mask(Ant_bio_SPVE, ACBRS_SPVE) %>% st_as_sf()

bio_vestfold_df <- terra::crop(Ant_bio_SPVE, Vestfold.covs.stk[1]) %>% as.data.frame(geom = "XY")
bio_vestfold_sf <- terra::crop(Ant_bio_SPVE, Vestfold.covs.stk[1]) %>% st_as_sf()

bio_bunger_df <- terra::crop(Ant_bio_SPVE, Bunger.covs.stk[1]) %>% as.data.frame(geom = "XY")
bio_bunger_sf <- terra::crop(Ant_bio_SPVE, Bunger.covs.stk[1]) %>% st_as_sf()


```

## Plotting distribution of records 

```{r}

# Load the Antarctic coastline for plotting
coast <- st_read(here("Data/add_coastline_high_res_polygon_v7_5.shp"), crs = 3031)

# Plot distribution of presence-only lichen records across East Antarctica
a <- ggplot() +
  geom_sf(data = coast, color = "black", size = 0.05) +
  geom_sf(data = ice_free, fill = "grey80", size = 0.05) +
  geom_sf(data = bio_east_ant_sf, aes(color = class)) +
  coord_sf(
    xlim = c(st_bbox(bio_east_ant_sf)$xmin, st_bbox(bio_east_ant_sf)$xmax), 
    ylim = c(st_bbox(bio_east_ant_sf)$ymin, st_bbox(bio_east_ant_sf)$ymax)) +
   scale_fill_manual(name = "", 
                    labels = element_blank(),
                    values = c("white", "grey92","grey92", "grey92")) +
  theme_bw() + 
  theme(legend.title = element_blank(),
        legend.key = element_blank(),
        legend.background = element_blank())

# Now just in Vestfold Hills
b <- ggplot() +
  geom_sf(data = coast, color = "black", size = 0.05) +
   geom_sf(data = ice_free, fill = "grey80", size = 0.05) +
  geom_sf(data = bio_east_ant_sf, aes(color = class)) +
  coord_sf(
    xlim = c(st_bbox(bio_vestfold_sf)$xmin, st_bbox(bio_vestfold_sf)$xmax), 
    ylim = c(st_bbox(bio_vestfold_sf)$ymin, st_bbox(bio_vestfold_sf)$ymax)) +
  scale_fill_manual(name = "", 
                    labels = element_blank(),
                    values = c("white", "grey92","grey92", "grey92")) +
  theme_bw() +
  theme(legend.title = element_blank(),
        legend.key = element_blank(),
        legend.background = element_blank())

# And in Bunger Hills
c <- ggplot() +
  geom_sf(data = coast, color = "black", size = 0.05) +
  geom_sf(data = ice_free, fill = "grey80", size = 0.05) +
  geom_sf(data = bio_east_ant_sf, aes(color = class)) +
  coord_sf(
    xlim = c(st_bbox(bio_bunger_sf)$xmin, st_bbox(bio_bunger_sf)$xmax), 
    ylim = c(st_bbox(bio_bunger_sf)$ymin, st_bbox(bio_bunger_sf)$ymax)) +
  scale_fill_manual(name = "", 
                    labels = element_blank(),
                    values = c("white", "grey92","grey92", "grey92")) +
  theme_bw() +
    theme(legend.title = element_blank(),
        legend.key = element_blank(),
        legend.background = element_blank())

PO <- ggarrange(a , 
          ggarrange(b, c, nrow = 2, labels = c("(b)", "(c)")),
          labels = c("(a)", ""), ncol = 2, 
          common.legend = T)

# ggsave(plot = PO , filename = here("output/Locs_of_PO_data_East_Ant_plot.png"), w = 21.5, h = 21.2, units = "cm", dpi = 800, device = "png" )

```

## Summarising number of records for target groups across East Antarctica, in the Vestfold Hills and in the Bunger Hills

::: {.panel-tabset}

## East Antarctica

```{r}

count(bio_east_ant_df, class)

```

## Vestfold Hills

```{r}

count(bio_vestfold_df, class)

```

## Bunger Hills

```{r}

count(bio_bunger_df, class)

```

:::

### Load the presence-absence data from Leishman et al. (2020)

Adjust Easting and Northing

```{r}

leishman <- read.csv(here("Data/leishman_data.csv"))
leishman$easting <- as.character(leishman$easting)
leishman$northing_new <- as.character(leishman$northing_new)

leishman <- leishman %>% mutate(easting_final = paste0("5", easting, "00"))
leishman <- leishman %>% mutate(northing_final = paste0("26", northing_new, "00"))

leishman$easting_final <- as.numeric(leishman$easting_final)
leishman$northing_final <- as.numeric(leishman$northing_final)

leishman_sf <- st_as_sf(leishman,
                        coords = c("easting_final", "northing_final"),
                        crs = 32747) # UTM Zone 47S

# Project to WGS 84 Antarctic Polar Stereographic
leishman_sf <- st_transform(leishman_sf, 3031) 

leishman_df <- leishman_sf %>% 
  st_coordinates() %>%
  as.data.frame() %>% 
  bind_cols(st_drop_geometry(leishman_sf)) %>% 
  rename(x = X, y = Y) 

leishman_plot <- ggplot() +
  geom_sf(data = coast, color = "black", size = 0.05) +
  geom_sf(data = ice_free, fill = "grey80", size = 0.05) +
  geom_sf(data = leishman_sf, aes(color = presence)) +
  coord_sf(
    xlim = c(st_bbox(bio_bunger_sf)$xmin, st_bbox(bio_bunger_sf)$xmax),
    ylim = c(st_bbox(bio_bunger_sf)$ymin, st_bbox(bio_bunger_sf)$ymax)) +
  scale_fill_manual(name = "",
                    labels = element_blank(),
                    values = c("white", "grey92","grey92", "grey92")) +
  theme_classic() +
    theme(legend.title = element_blank(),
        legend.key = element_blank(),
        legend.background = element_blank())

leishman_plot

 # ggsave(plot = leishman_plot , filename = here("output/Locs_of_PA_data_Bunger_plot.png"), w = 21.5, h = 21.2, units = "cm", dpi = 800, device = "png" )
```
### Load the presence-absence data from Travers et al. (2024)

```{r}

travers <- read.csv(here("Data/Travers_Vestfold_PA_Survey.csv"))

travers_sf <- st_as_sf(travers,
                        coords = c("x", "y"),
                        crs = 4326) # WGS 84 geographic coordinates

travers_sf <- st_transform(travers_sf, 3031) #project to WGS_1984 Antarctic Polar Stereographic

travers_df <- travers_sf %>% 
  st_coordinates() %>%
  as.data.frame() %>% 
  bind_cols(st_drop_geometry(travers_sf)) %>% 
  rename(x = X, y = Y) 

travers_plot <- ggplot() +
  geom_sf(data = coast, color = "black", size = 0.05) +
  geom_sf(data = ice_free, fill = "grey80", size = 0.05) +
  geom_sf(data = travers_sf, color = "red") +
  coord_sf(
    xlim = c(st_bbox(bio_vestfold_sf)$xmin, st_bbox(bio_vestfold_sf)$xmax),
    ylim = c(st_bbox(bio_vestfold_sf)$ymin, st_bbox(bio_vestfold_sf)$ymax)) +
  scale_fill_manual(name = "",
                    labels = element_blank(),
                    values = c("white", "grey92","grey92", "grey92")) +
  theme_classic() +
    theme(legend.title = element_blank(),
        legend.key = element_blank(),
        legend.background = element_blank())

ggplot() +
  geom_sf(data = travers_2, color = "red") +
  theme_bw()

travers_plot

# ggsave(plot = travers_plot , filename = here("output/Locs_of_PA_data_Vestfold_plot.png"), w = 21.5, h = 21.2, units = "cm", dpi = 800, device = "png" )

```

# Formatting for model preparation
Starting with lichens.
Starting with Bunger to Vestfold.

```{r}

PO <- bio_east_ant_df %>% 
  filter(class == "Bryopsida") %>% 
  select(x, y) 

PA_fit <- leishman_df %>% 
  filter(species == "Moss") %>% 
  select(x, y, presence)
  
PA_val <- travers_df %>% 
  select(x, y, surface_moss) %>% 
  rename(presence = surface_moss)

```

# Calculating extrapolation

```{r}
# Convert covarites to a dataframe
Bunger.covs.df <- as.data.frame(Bunger.covs.stk, xy = T)
Vestfold.covs.df <- as.data.frame(Vestfold.covs.stk, xy = T)

```

```{r}

library(flexsdm)



```

# TESTS WITH 1 KM RESOLUTION VARIABLES

```{r}

elev <- rast(here("Data/rema_mosaic_1km_v2.0_filled_cop30_dem.tif")) 
TWI <- rast(here("Data/twi_upscaled_landsat_merged.tif")) %>% resample(elev)
wind <- rast(here("Data/ERA5_wind_speed.tif")) %>% resample(elev)
summer_temp <- rast(here("Data/AntAir_summer_mean_resamp.tif")) %>% resample(elev) 
northness <- rast(here("Data/northness_landsat_upscaled_complete.tif")) %>% resample(elev)



cov.stk <- c(elev, TWI, wind, summer_temp, northness)
names(cov.stk) <- c("elev", "TWI", "wind", "summer_temp", "northness")

cov.stk <- terra::crop(cov.stk, ACBRS_SPVE)

```

### Extracting covariates for Bunger and Vestfold

```{r}

# Load Vestfold Hills polygon
Vestfold <- st_read(here("Data/Vestfold_Hills_Polygon_ADD_medium_res_v7.3.shp"), crs = 3031)
Vestfold_SPVE <- vect(Vestfold)
Vestfold.landsat <- st_read(here("Data/Vestfold_Landsat_Polygon.shp")) %>% 
  st_transform(3031) %>% 
  vect()

# Load Bunger Hills polygon
Bunger <- st_read(here("Data/Bunger_hills_extent_for_Justine.shp"), crs = 3031)
Bunger_SPVE <- vect(Bunger)
Bunger.landsat <- st_read(here("Data/Bunger_Landsat_Polygon.shp")) %>% 
  st_transform(3031) %>% 
  vect()

```

```{r}

Bunger.covs.stk <- terra::crop(cov.stk, Bunger_SPVE)
Bunger.covs.stk <- terra::mask(Bunger.covs.stk, Bunger.landsat)
plot(Bunger.covs.stk)

Vestfold.covs.stk <- terra::crop(cov.stk, Vestfold_SPVE)
Vestfold.covs.stk <- terra::mask(Vestfold.covs.stk, Vestfold.landsat)
plot(Vestfold.covs.stk)

East.Ant.covs.stk <- terra::crop(cov.stk, ACBRS_SPVE)
East.Ant.covs.stk <- terra::mask(East.Ant.covs.stk, ACBRS_SPVE)
plot(East.Ant.covs.stk)

```



```{r}
bio_east_ant_df <- terra::mask(Ant_bio_SPVE, ACBRS_SPVE) %>% as.data.frame(geom = "XY")
bio_east_ant_sf <- terra::mask(Ant_bio_SPVE, ACBRS_SPVE) %>% st_as_sf()

bio_vestfold_df <- terra::mask(Ant_bio_SPVE, Vestfold.landsat) %>% as.data.frame(geom = "XY")
bio_vestfold_sf <- terra::mask(Ant_bio_SPVE, Vestfold.landsat) %>% st_as_sf()

bio_bunger_df <- terra::mask(Ant_bio_SPVE, Bunger.landsat) %>% as.data.frame(geom = "XY")
bio_bunger_sf <- terra::mask(Ant_bio_SPVE, Bunger.landsat) %>% st_as_sf()

```

# 1 km - Calculating extrapolation

```{r}
# Convert covarites to a dataframe
Bunger.covs.df <- as.data.frame(Bunger.covs.stk, xy = T)
Vestfold.covs.df <- as.data.frame(Vestfold.covs.stk, xy = T)

```

```{r}

library(flexsdm)

# Adding presence column due to extra_eval requirements
# Trimming so just the covariates
training <- Bunger.covs.df %>% 
  mutate(Presence = 1) %>% 
  .[,c("elev", "TWI", "wind", "summer_temp", "northness", "Presence")]

projection <- Vestfold.covs.df %>% 
  .[,c("elev", "TWI", "wind", "summer_temp", "northness")]

shape_extrap <- extra_eval(training_data = training,
                           pr_ab = "Presence",
                           projection_data = projection,
                           metric = "mahalanobis",
                           univar_comb = F)

shape_extrap <- cbind(shape_extrap, Vestfold.covs.df[, c("x", "y")])

shape_extrap %>% 
  ggplot() + 
  geom_tile(aes(x = x, y = y, fill = extrapolation)) + 
  scale_fill_viridis() +
  coord_fixed() + 
  theme_bw() + 
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.ticks = element_blank(),
        legend.title = element_blank()) +
  ggtitle('Extrapolation - Bunger to Vestfold')


```
```{r}

mean(shape_extrap$extrapolation, na.rm = T)
median(shape_extrap$extrapolation, na.rm = T)
min(shape_extrap$extrapolation, na.rm = T)
max(shape_extrap$extrapolation, na.rm = T)

```
### Plotting data in covariate space with extrapolation

```{r}

ggplot() + 
  geom_point(data = Bunger.covs.df, aes(x = elev, y = TWI), color = "grey") +
  geom_point(data = shape_extrap, aes(x = elev, y = TWI, color = extrapolation)) +
  scale_color_viridis(option = "magma", direction = -1) +
  theme_bw() +
  theme(legend.ticks = element_blank()) +
  ggtitle('Extrapolation Bunger to Vestfold - elev and TWI')

ggplot() + 
  geom_point(data = Bunger.covs.df, aes(x = TWI, y = wind), color = "grey") +
  geom_point(data = shape_extrap, aes(x = TWI, y = wind, color = extrapolation)) +
  scale_color_viridis(option = "magma", direction = -1) +
  theme_bw() +
  theme(legend.ticks = element_blank()) +
  ggtitle('Extrapolation Bunger to Vestfold - TWI and wind')

ggplot() +
  geom_point(data = Bunger.covs.df, aes(x = wind, y = summer_temp), color = "grey") +
  geom_point(data = shape_extrap, aes(x = wind, y = summer_temp, color = extrapolation)) +
  scale_color_viridis(option = "magma", direction = -1) +
  theme_bw() +
  theme(legend.ticks = element_blank()) +
  ggtitle('Extrapolation Bunger to Vestfold - wind and summer_temp')

ggplot() +
  geom_point(data = Bunger.covs.df, aes(x = summer_temp, y = northness), color = "grey") +
  geom_point(data = shape_extrap, aes(x = summer_temp, y = northness, color = extrapolation)) +
  scale_color_viridis(option = "magma", direction = -1) +
  theme_bw() +
  theme(legend.ticks = element_blank()) +
  ggtitle('Extrapolation Bunger to Vestfold - summer_temp and northness')

ggplot() +
  geom_point(data = Bunger.covs.df, aes(x = elev, y = wind), color = "grey") +
  geom_point(data = shape_extrap, aes(x = elev, y = wind, color = extrapolation)) +
  scale_color_viridis(option = "magma", direction = -1) +
  theme_bw() +
  theme(legend.ticks = element_blank()) +
  ggtitle('Extrapolation Bunger to Vestfold - elev and wind')


```


# Fit the mesh - 1 km version
Option 1. Fit mesh over the entire East Antarctic region

```{r}
library(RISDM)

mesh.default <- makeMesh(East.Ant.covs.stk,
                         max.n = c(5000, 2500), # Default c(500,200)
                         dep.range = NULL, # In raster projection units, default is 1/3 diagonal length of raster extent
                         expans.mult = 1.5, # Default, 1.5 x dep.range
                         max.edge = NULL, # Default c(0.2, 0.5)*dep.range
                         cutoff = NULL, # Default 0.2*max.edge1
                         offset = NULL, # Default is dep.range
                         doPlot = TRUE
                         )

```
## Model specification

```{r}

# Priors
my.control <- list(coord.names = c("x", "y"),
                   prior.mean = 0,
                   int.sd = 1000, # Intercept standard deviation
                   other.sd = 10, # Covariate effect standard deviation
                   prior.range = c(1, 0.1), # Prior chance 10% that parameter falls below range of 1km
                   prior.space.sigma = c(5, 0.1)) # Prior chance 10% that parameter falls above SD of 5
```


```{r}

PA_fit <- PA_fit %>% mutate(area = 0.5)
PA_val <- PA_val %>% mutate(area = 0.5)

```

# Integrated Model Fitting
```{r}

    m.int <- isdm(observationList = list(POdat = PO,
                                         PAdat = PA_fit),
                  covars = East.Ant.covs.stk,
                  mesh = mesh.default,
                  responseNames = c(PO = NULL, PA = "presence"),
                  sampleAreaNames = c(PO = NULL, PA = "area"),
                  distributionFormula = ~0 + elev + TWI + wind + summer_temp + northness, # Linear w covs
                  biasFormula = ~1, #Intercept only
                  artefactFormulas = list(PA = ~1), # Intercept only
                  control = my.control)
    
```

# Presence-Only Model Fitting

```{r}

    m.PO <- isdm(observationList = list(POdat = PO), 
                  covars = East.Ant.covs.stk,
                  mesh = mesh.default,
                  responseNames = NULL,
                  sampleAreaNames = NULL,
                  distributionFormula = ~0 + elev + TWI + wind + summer_temp + northness, # Linear w one cov
                  biasFormula = ~1, #Intercept only
                  artefactFormulas = NULL,
                  control = my.control)

```

```{r}
summary(m.int)
summary(m.PO)
```

## Residual plots

```{r}

plot(m.int, nFigRow = 2, ask = F)
plot(m.PO, nFigRow = 2, ask = F)

```


